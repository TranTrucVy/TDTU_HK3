--52100674_TRANTHIVEN
--HOÀNH THÀNH HẾT BÀI TEST
USE MASTER
DROP DATABASE IF EXISTS TRANTHIVEN_52100674
GO 
CREATE DATABASE TRANTHIVEN_52100674
GO
USE TRANTHIVEN_52100674
GO
IF EXISTS( SELECT * FROM SYSOBJECTS WHERE NAME='KETQUA')
DROP TABLE KETQUA
GO

CREATE TABLE KETQUA(
	MASV VARCHAR(255),
	MAMH VARCHAR(255),
	LANTHI INT,
	DIEM FLOAT,
	
	PRIMARY KEY (MASV,MAMH,LANTHI)
)
GO
IF EXISTS( SELECT * FROM SYSOBJECTS WHERE NAME='DMKHOA')
DROP TABLE DMKHOA
GO

CREATE TABLE DMKHOA(
	MAKHOA VARCHAR(255),
	TENKHOA NVARCHAR(255),

	PRIMARY KEY(MAKHOA)
)
GO
IF EXISTS( SELECT * FROM SYSOBJECTS WHERE NAME='DMMH')
DROP TABLE DMMH
GO
CREATE TABLE DMMH(
	MAMH VARCHAR(255),
	TENMH NVARCHAR(255),
	SOTIET INT,

	PRIMARY KEY(MAMH)
)
GO
IF EXISTS( SELECT * FROM SYSOBJECTS WHERE NAME='DMSV')
DROP TABLE DMSV
GO
CREATE TABLE DMSV (
  MASV VARCHAR(255) NOT NULL,
  HOSV NVARCHAR(255),
  TENSV NVARCHAR(255),
  PHAI INT,
  NGAYSINH DATE,
  NOISINH NVARCHAR(255),
  MAKHOA VARCHAR(255),
  HOCBONG INT,

  PRIMARY KEY (MASV)
)
GO
ALTER TABLE KETQUA ADD CONSTRAINT FK_KQ_MAMH FOREIGN KEY (MAMH) REFERENCES DMMH(MAMH)

ALTER TABLE KETQUA ADD CONSTRAINT FK_KQ_MASV FOREIGN KEY (MASV) REFERENCES DMSV(MASV)

ALTER TABLE DMSV ADD CONSTRAINT FK_DMSV_MAKHOA FOREIGN KEY (MAKHOA) REFERENCES DMKHOA(MAKHOA)

INSERT INTO DMMH 
VALUES
		('01',N'CƠ SỞ DỮ LIỆU',45),
		('02',N'TRÍ TUỆ NHÂN TẠO',45),
		('03',N'TRUYỀN TIN',45),
		('04',N'ĐỒ HOẠ',60),
		('05',N'VĂN PHẠM',60),
		('06',N'KỸ THUẬT LẬP TRÌNH',45);
INSERT INTO DMMH 
VALUES 
		('07',N'CẤU TRÚC DỮ LIỆU 1',45);
INSERT INTO DMKHOA 
VALUES
		('AV',N'ANH VĂN'),
		('TH',N'TIN HỌC'),
		('TR',N'TRIẾT'),
		('VL',N'VẬT LÝ');
INSERT INTO DMKHOA 
VALUES
		('CNTT',N'CÔNG NGHỆ THÔNG TIN');

SET DATEFORMAT DMY

INSERT INTO DMSV 
VALUES
		('A01',N'NGUYỄN THỊ',N'HẢI',1,'23/02/1993',N'HÀ NỘI','TH',130000),
		('A02',N'TRẦN VĂN',N'CHÍNH',0,'24/12/1992',N'BÌNH ĐỊNH','VL',150000),
		('A03',N'LÊ THU BẠCH',N'YẾN',1,'21/02/1993',N'TPHCM','TH',170000),
		('A04',N'TRẦN ANH',N'TUẤN',0,'20/12/1994',N'HÀ NỘI','AV',80000),
		('B01',N'TRẦN THANH',N'MAI',1,'12/08/1993',N'HẢI PHÒNG','TR',0),
		('B02',N'TRẦN THỊ THU',N'THUỶ',1,'02/01/1994',N'TPHCM','AV',0);

INSERT INTO DMSV 
VALUES
		('B03',N'TRẦN THỊ THU',N'ALO',1,'02/01/2021',N'TPHCM','AV',1000),
		('B04',N'TRẦN THỊ THU',N'TRUC',1,'06/10/2004',N'TPHCM','AV',10000),
		('B05',N'TRẦN THỊ THU',N'THỦY',1,'06/10/2005',N'TPHCM','AV',10000),
		('B06',N'PHẠM PHÚC',N'XUYÊN',1,'15/10/2003',N'TPHCM','CNTT',10000),
		('B07',N'NGUYỄN THANH',N'TÚ',1,'20/10/2003',N'TPHCM','CNTT',10000);

INSERT INTO KETQUA 
VALUES
		('A01','01',1,3),
		('A01','01',2,6),
		('A01','02',2,6),
		('A01','03',1,5),
		('A02','01',1,4.5),
		('A02','01',2,7),
		('A02','03',1,10),
		('A02','05',1,9),
		('A03','01',1,2),
		('A03','01',2,5),
		('A03','03',1,2.5),
		('A03','05',2,4),
		('A04','05',2,10),
		('B01','01',1,7),
		('B01','03',1,2.5),
		('B01','03',2,5),
		('B02','02',1,6),
		('B02','04',1,10);
INSERT INTO KETQUA 
VALUES
		('B06','07',1,1.2),
		('B06','07',2,6),
		('B07','07',1,2.5);

SELECT * FROM DMMH
SELECT * FROM DMSV
SELECT * FROM KETQUA
SELECT * FROM DMKHOA
--A. QUERY

-- 1. Danh sách các sinh viên khoa “Tin học”
SELECT MASV,HOSV,TENSV,PHAI,NGAYSINH,SV.MAKHOA,HOCBONG FROM DMSV AS SV, DMKHOA AS KH
WHERE KH.MAKHOA = SV.MAKHOA AND KH.TENKHOA LIKE N'TIN HỌC'

--2. Danh sách các sinh viên gồm thông tin sau: Mã sinh viên, họ tên sinh viên, Phái, Ngày sinh.
--Danh sách sẽ được sắp xếp theo thứ tự Nam/Nữ.
SELECT MASV,HOSV+' '+TENSV AS HOTENSV,PHAI,NGAYSINH FROM DMSV
ORDER BY PHAI

--​ 3. "Cho biết các thông tin (MSSV, họ tên ,năm sinh) của các sinh viên học sớm hơn tuổi qui định
--(theo tuổi qui định thi sinh viên đủ 18 tuổi khi bắt đầu khóa học)";
-- Day(GETDATE())->lấy ngày trong tháng
-- Month(GETDATE()) -> lấy Tháng trong Năm
-- Year(GETDATE()) -> lấy năm
SELECT MASV,HOSV+' '+TENSV AS HOTEN,YEAR(NGAYSINH) AS NAMSINH FROM DMSV
WHERE DATEDIFF(YEAR,NGAYSINH,GETDATE()) < 18

--4. Cho biết sinh viên khoa CNTT, chưa học môn cấu trúc dữ liệu 1
SELECT MASV,HOSV,TENSV,PHAI,NGAYSINH,MAKHOA,HOCBONG
FROM DMSV
WHERE MASV NOT IN (
	SELECT K.MASV
	FROM KETQUA AS K,DMMH AS H
	WHERE K.MAMH=H.MAMH AND TENMH LIKE N'CẤU TRÚC DỮ LIỆU 1'
)
SELECT MASV,HOSV,TENSV,PHAI,NGAYSINH,MAKHOA,HOCBONG
FROM DMSV
WHERE MASV NOT IN (
	SELECT K.MASV FROM KETQUA AS K
	WHERE K.MAMH IN (SELECT DMMH.MAMH FROM DMMH 
	WHERE TENMH LIKE N'CẤU TRÚC DỮ LIỆU 1'))

-- 5. Cho biết sinh viên thi không đậu (Diem<5) môn cấu trúc dữ liệu 1 nhưng chưa thi lại.
DROP TABLE IF EXISTS SVCHUATHILAI
GO
SELECT MASV, COUNT(LANTHI) AS TIMES
INTO SVCHUATHILAI
FROM KETQUA
WHERE MAMH LIKE '07'
GROUP BY MASV
Go
SELECT * FROM SVCHUATHILAI
SELECT DISTINCT SV.MASV, SV.HOSV, SV.TENSV, SV.NGAYSINH, SV.NOISINH, SV.MAKHOA
FROM DMSV AS SV, KETQUA AS KQ, DMMH AS MH, SVCHUATHILAI AS SL
WHERE SV.MASV = KQ.MASV AND KQ.MAMH = MH.MAMH AND SL.MASV = KQ.MASV  AND KQ.MAMH LIKE '07' AND KQ.DIEM < 5 AND SL.TIMES <=1

--6. Cho biết kết quả điểm thi của các sinh viên, gồm các thông tin: Họ tên sinh viên, Mã môn học,
--lần thi, điểm, kết quả (nếu điểm nhỏ hơn 5 thì rớt ngược lại đậu).
SELECT HOSV+' '+TENSV AS HOTEN,KQ.MAMH,LANTHI,
		RESULT=(
			CASE WHEN DIEM>5 THEN 'DAU' ELSE 'ROT' END
		)
FROM DMSV AS SV,KETQUA AS KQ
WHERE SV.MASV=KQ.MASV

-- 7. Cho biết những nơi nào có hơn 2 sinh viên đang theo học tại trường.
SELECT NOISINH
FROM DMSV
GROUP BY NOISINH
HAVING COUNT(NOISINH)=2

--8. Cho biết danh sách các sinh viên rớt trên 2 môn ở lần thi 1.
--SELECT DISTINCT SV.MASV, SV.HOSV, SV.TENSV, SV.NGAYSINH, SV.NOISINH, SV.MAKHOA
--FROM DMSV AS SV, 
--(
--	SELECT MASV, MAMH, COUNT(LANTHI) AS TIMES
--	FROM KETQUA
--	WHERE DIEM < 5
--	GROUP BY MASV,MAMH
--	HAVING COUNT(LANTHI) = 1
--) B
--WHERE SV.MASV = B.MASV
--GROUP BY SV.MASV, SV.HOSV, SV.TENSV, SV.NGAYSINH, SV.NOISINH, SV.MAKHOA
--HAVING COUNT(B.MASV) >=2

SELECT MASV,HOSV+' '+TENSV AS HOTEN
FROM DMSV
WHERE MASV IN (
	SELECT MASV
	FROM KETQUA
	WHERE DIEM<5 AND LANTHI=1
	GROUP BY MASV,LANTHI
	HAVING COUNT(MASV)=2
)
--9.Cho biết sinh viên khoa anh văn học môn văn phạm có điểm thi lần 1 thấp nhất.
SELECT DISTINCT SV.MASV, SV.HOSV, SV.TENSV, SV.NGAYSINH, SV.NOISINH, SV.MAKHOA
FROM DMSV AS SV, KETQUA AS KQ
WHERE SV.MASV = KQ.MASV AND SV.MAKHOA LIKE 'AV' AND LANTHI = 1 AND MAMH LIKE '05' AND DIEM <= ALL
(
SELECT DIEM
FROM DMSV SV1, KETQUA KQ1
WHERE SV1.MASV = KQ1.MASV AND SV1.MAKHOA LIKE 'AV' AND LANTHI = 1 AND MAMH LIKE '05'
)
SELECT MASV,HOSV+' '+TENSV AS HOTEN
FROM DMSV AS SV,DMKHOA AS K
WHERE SV.MAKHOA=K.MAKHOA AND TENKHOA LIKE N'ANH VĂN'
AND MASV IN (
	SELECT MASV
	FROM KETQUA
	WHERE LANTHI=1 AND MAMH IN (
		SELECT MAMH
		FROM DMMH
		WHERE TENMH LIKE N'VĂN PHẠM'
	)
	GROUP BY MASV,LANTHI
	HAVING MIN(DIEM)=(
		SELECT MIN(DIEM)
		FROM KETQUA
		WHERE LANTHI=1 AND MAMH IN (
			SELECT MAMH
			FROM DMMH
			WHERE TENMH LIKE N'VĂN PHẠM'
		)
	)
)
--10. Cho biết những sinh viên có học bổng lớn hơn tất cả học bổng của sinh viên thuộc khoa anh văn
SELECT DISTINCT SV.MASV, SV.HOSV, SV.TENSV, SV.NGAYSINH, SV.NOISINH, SV.MAKHOA
FROM DMSV AS SV
WHERE HOCBONG>(
	SELECT SUM(HOCBONG)
	FROM DMSV AS SV,DMKHOA AS K
	WHERE SV.MAKHOA=K.MAKHOA AND TENKHOA LIKE N'ANH VĂN'
)

--11. Cho biết những sinh viên khoa anh văn chưa học môn văn phạm.
SELECT MASV,HOSV+' '+TENSV AS HOTEN
FROM DMSV AS SV,DMKHOA AS K
WHERE MASV NOT IN(
	SELECT KQ.MASV
	FROM DMMH AS MH,KETQUA AS KQ
	WHERE KQ.MAMH=MH.MAMH AND TENMH LIKE N'VĂN PHẠM'

)
AND SV.MAKHOA = K.MAKHOA AND TENKHOA LIKE N'ANH VĂN'

--B FUNCTION

-- 1. Với 1 mã sinh viên và 1 mã khoa, kiểm tra xem sinh viên có thuộc khoa này không (trả về đúng
-- hoặc sai)

DROP FUNCTION IF EXISTS CAU2A
GO
CREATE FUNCTION CAU2A(@MASV VARCHAR(255),@MAKHOA VARCHAR(255))
RETURNS BIT
AS
BEGIN
	IF EXISTS
	(
	SELECT * 
	FROM DBO.DMSV 
	WHERE @MASV=MASV AND @MAKHOA=MAKHOA
	)
	BEGIN
		RETURN 1
	END
	RETURN 0
END
GO
PRINT DBO.CAU2A('A01','CNTT')
PRINT DBO.CAU2A('A01','TH')
-- 2.Tính điểm thi sau cùng của một sinh viên trong một môn học cụ thể
DROP FUNCTION IF EXISTS DIEMTHI
GO
CREATE FUNCTION DIEMTHI(@MASV VARCHAR(255),@MAMH VARCHAR(255))
RETURNS FLOAT
AS
BEGIN
	DECLARE @LANTHICUOI INT
	SELECT @LANTHICUOI = MAX(LANTHI) 
	FROM KETQUA
	WHERE @MASV = MASV AND @MAMH = MAMH
	DECLARE @DIEMCUOI FLOAT
	SELECT @DIEMCUOI = DIEM
	FROM KETQUA
	WHERE @MASV = MASV AND @MAMH = MAMH AND LANTHI = @LANTHICUOI
	RETURN @DIEMCUOI
END
GO
PRINT DBO.DIEMTHI('A01','01')

-- 3. Tính điểm trung bình của một sinh viên (chú ý : điểm trung bình được tính dựa trên lần thi sau
--cùng), sử dụng function 2 đã viết
DROP FUNCTION IF EXISTS DIEMTBSV
GO
CREATE FUNCTION DIEMTBSV(@MASV varchar(255))
RETURNS FLOAT
AS
BEGIN
		DECLARE @DIEMTONG FLOAT
		SET  @DIEMTONG = 0
		SELECT  @DIEMTONG = AVG(DBO.DIEMTHI(@MASV,MAMH))
		FROM KETQUA
		WHERE @MASV = MASV
		GROUP BY MASV, MAMH
		RETURN  @DIEMTONG
END
GO
PRINT DBO.DIEMTBSV('A01')

-- 4. Nhập vào 1 sinh viên và 1 môn học, trả về các điểm thi của sinh viên này trong các lần thi của
--môn học đó.
DROP FUNCTION IF EXISTS DIEMTHI1MON
GO
CREATE FUNCTION DIEMTHI1MON(@MASV varchar(255), @MAMH varchar(255))
RETURNS TABLE
AS
	RETURN 
	(
		SELECT SV.MASV, SV.HOSV, SV.TENSV, MAMH, KQ.LANTHI, KQ.DIEM
		FROM DMSV AS SV, KETQUA AS KQ
		WHERE @MASV = SV.MASV AND SV.MASV = KQ.MASV AND @MAMH = MAMH
		GROUP BY SV.MASV, SV.HOSV, SV.TENSV, MAMH, KQ.LANTHI, KQ.DIEM
	)
GO
SELECT * FROM DIEMTHI1MON('A01','01')

--C. STORE PROCUDERE
--1. Nhập vào 1 khoa, in danh sách các sinh viên (mã sinh viên, họ tên, ngày sinh) thuộc khoa này.
DROP PROCEDURE IF EXISTS DSSV
GO
CREATE PROC DSSV @TENKHOA NVARCHAR(255)
AS
BEGIN
	SELECT SV.MASV, SV.HOSV, SV.TENSV, SV.NGAYSINH
	FROM DMSV AS SV, DMKHOA AS KH
	WHERE @TENKHOA = KH.TENKHOA AND SV.MAKHOA = KH.MAKHOA
END
GO
EXEC DSSV N'Công Nghệ Thông Tin'

-- 2. Nhập vào 2 sinh viên, 1 môn học, tìm xem sinh viên nào có điểm thi môn học đó lần đầu tiên là cao hơn
DROP FUNCTION IF EXISTS SVDIEML1CAONHAT
GO
CREATE FUNCTION SVDIEML1CAONHAT (@MASV VARCHAR(255), @MAMH VARCHAR(255), @LANTHI INT)
RETURNS FLOAT
AS
BEGIN
	  DECLARE @DIEM FLOAT
	  SELECT @DIEM=DIEM FROM KETQUA 
	  WHERE MASV=@MASV AND MAMH=@MAMH AND LANTHI=@LANTHI
	  RETURN @DIEM
END
GO
DROP PROCEDURE IF EXISTS DIEMCAOHON
GO
CREATE PROCEDURE DIEMCAOHON(@MASV1 VARCHAR(255),@MASV2 VARCHAR(255),@MAMH VARCHAR(255))
AS
BEGIN
	DECLARE @DIEM1 FLOAT
	DECLARE @DIEM2 FLOAT
	SET @DIEM1=DBO.SVDIEML1CAONHAT(@MASV1,@MAMH,1)
	SET @DIEM2=DBO.SVDIEML1CAONHAT(@MASV2,@MAMH,1)
	IF @DIEM1 >= @DIEM2
	BEGIN
		PRINT 'SINH VIEN 1'
		RETURN
	END
	PRINT 'SINH VIEN 2'
END

GO
EXEC DIEMCAOHON 'A01','B01','01'

-- 3.Nhập vào 1 môn học và 1 mã sv, kiểm tra xem sinh viên có đậu môn này trong lần thi đầu tiên
--không, nếu đậu thì xuất ra là “Đậu”, không thì xuất ra “Không đậu”
DROP PROCEDURE IF EXISTS KTSVDAULAN1
GO
CREATE PROCEDURE KTSVDAULAN1  @MASV varchar(20), @MAMH varchar(20)
AS
BEGIN
	DECLARE @FLAG BIT
	DECLARE @DIEMSV FLOAT
	SET @DIEMSV = (SELECT DIEM FROM KETQUA WHERE @MASV=MASV AND LANTHI = 1 AND MAMH LIKE @MAMH)
	IF (@DIEMSV >=5)
		BEGIN
			SET @FLAG = 1
		END
	ELSE
		BEGIN
			SET @FLAG = 0
		END
	RETURN @FLAG
END
GO
DECLARE @RESVALUE INT
EXEC @RESVALUE = KTSVDAULAN1 'A01','01'
IF (@RESVALUE = 1)
	BEGIN
		PRINT(N'ĐẬU')
	END
ELSE
	BEGIN
		PRINT(N'KHÔNG ĐẬU')
	END
--4 Nhập vào 1 sinh viên và 1 môn học, in điểm thi của sinh viên này của các lần thi môn học đó.
DROP PROCEDURE IF EXISTS INDIEMTHICUASV
GO

CREATE PROCEDURE INDIEMTHICUASV @MASV VARCHAR(255),@MAMH VARCHAR(255)
AS
BEGIN
	SELECT * FROM DBO.DIEMTHI1MON(@MASV,@MAMH)
END
GO
EXEC INDIEMTHICUASV 'A01','02'

--5. Nhập vào 1 sinh viên, in ra các môn học mà sinh viên này phải học.
DROP PROCEDURE IF EXISTS INTENMONHOC
GO
CREATE PROCEDURE INTENMONHOC(@MASV VARCHAR(255))
AS
BEGIN
	SELECT TENMH
	FROM DMMH
	WHERE MAMH IN (SELECT MAMH FROM KETQUA WHERE @MASV=MASV)
END
GO
EXEC INTENMONHOC 'A02'

--6. Nhập vào 1 môn học, in danh sách các sinh viên đậu môn này trong lần thi đầu tiên
DROP PROCEDURE IF EXISTS KIEMTRALAN1DAU
GO
CREATE PROCEDURE KIEMTRALAN1DAU(@MASV VARCHAR(255),@MAMH VARCHAR(255))
AS
BEGIN
	DECLARE @DIEM FLOAT
	SET @DIEM=DBO.SVDIEML1CAONHAT(@MASV,@MAMH,1)
	IF @DIEM>=5
	BEGIN
		PRINT 'SINH VIEN DAU LAN 1'
		RETURN
	END
	PRINT 'SINH VIEN KHONG DAU LAN 1'
END
GO
EXEC KIEMTRALAN1DAU 'A01','02'

--7. Viết thủ tục nhập sinh viên mới
DROP PROCEDURE IF EXISTS NHAPSVMOI
GO
CREATE PROCEDURE NHAPSVMOI @MASV VARCHAR(255)
								,@HOSV NVARCHAR(255)
								,@TENSV NVARCHAR(255)
								,@PHAI INT
								,@NGAYSINH DATE
								,@NOISINH NVARCHAR(255)
								,@MAKHOA VARCHAR(255)
								,@HOCBONG INT
AS
BEGIN
	IF EXISTS(SELECT * FROM DMSV WHERE @MASV=MASV)
	BEGIN
		PRINT 'SINH VIEN NAY DA TON TAI TRONG DANH SACH'
		RETURN
	END
	INSERT INTO DMSV VALUES(@MASV,@HOSV,@TENSV,@PHAI,@NGAYSINH,@NOISINH,@MAKHOA,@HOCBONG)
	PRINT 'NHAP DU LIEU THANH CONG'
END
GO
EXEC NHAPSVMOI 'A15',N'NGUYỄN THANH',N'VŨ','1','1/1/2000 ','HUẾ','TH','1000000'
SELECT * FROM DMSV

--8 Viết thủ tục nhập sinh viên mới có kiểm tra ràng buộc khóa chính, ràng buộc khóa ngoại
-- với bảng Khoa và ràng buộc tuổi của sinh viên lớn hơn hoặc bằng 18 và nhỏ hơn 40.
DROP PROCEDURE IF EXISTS NHAPSVMOIS2
GO
CREATE PROCEDURE NHAPSVMOIS2 @MASV VARCHAR(255)
							,@HOSV NVARCHAR(255)
							,@TENSV NVARCHAR(255)
							,@PHAI INT
							,@NGAYSINH DATE
							,@NOISINH NVARCHAR(255)
							,@MAKHOA VARCHAR(255)
							,@HOCBONG INT
AS
BEGIN
	DECLARE @TUOI INT
	SET @TUOI = DATEDIFF(YEAR,@NGAYSINH,GETDATE())
	IF EXISTS(SELECT * FROM DMSV WHERE @MASV=MASV)
	BEGIN
		PRINT 'SINH VIEN NAY DA TON TAI TRONG DANH SACH'
		RETURN
	END
	IF NOT EXISTS(SELECT * FROM DMKHOA WHERE @MAKHOA=MAKHOA)
	BEGIN
		PRINT 'KHOA KHONG TON TAI TRONG BANG'
		RETURN
	END
	IF @TUOI<18 OR @TUOI>40
	BEGIN
		PRINT 'TUOI KHAC SO VOI QUY DINH'
		RETURN
	END
	INSERT INTO DMSV VALUES(@MASV,@HOSV,@TENSV,@PHAI,@NGAYSINH,@NOISINH,@MAKHOA,@HOCBONG)
	PRINT 'NHAP DU LIEU THANH CONG'
END
GO
EXEC NHAPSVMOIS2 'A14',N'HỒ GIANG MINH',N'NHẠT','1','02/07/2003',N'ĐỒNG NAI','CNTT','1000000'
SELECT * FROM DMSV

--9.Viết thủ tục nhập kết quả của sinh viên có kiểm tra ràng buộc khóa ngoại giữa bảng. Ketqua và bảng Sinhvien và bảng Monhoc.
DROP PROCEDURE  IF EXISTS NHAPKETQUA
GO
CREATE PROCEDURE NHAPKETQUA @MASV VARCHAR(255),@MAMH VARCHAR(255),@LANTHI INT,@DIEM FLOAT
AS
BEGIN
	IF NOT EXISTS(SELECT * FROM DMSV WHERE @MASV=MASV)
	BEGIN
		PRINT 'MA SINH VIEN KHONG TON TAI'
		RETURN
	END
	IF NOT EXISTS(SELECT * FROM DMMH WHERE @MAMH=MAMH)
	BEGIN
		PRINT 'MA MON HOC KHONG TON TAI'
		RETURN
	END
	IF EXISTS(SELECT * FROM KETQUA WHERE @MASV=MASV AND @MAMH=MAMH AND @LANTHI=LANTHI)
	BEGIN
		PRINT 'KET QUA NAY DA TON TAI'
		RETURN
	END
	INSERT INTO KETQUA VALUES(@MASV,@MAMH,@LANTHI,@DIEM)
	PRINT 'NHAP THANH CONG'
END
GO
EXEC NHAPKETQUA 'A12','01','1','10'

--10 Viết thủ tục cho biết số lượng sinh viên của khoa có mã nhập vào từ bàn phím.
DROP PROCEDURE IF EXISTS SOLUONG
GO
CREATE PROCEDURE SOLUONG @MAKHOA VARCHAR(255)
AS
BEGIN
	SELECT COUNT(*) FROM DMSV WHERE @MAKHOA=MAKHOA
END
GO
EXEC SOLUONG 'CNTT' 

--11 Viết hàm xem danh sách sinh viên của khoa có mã được nhập vào từ bàn phím
DROP FUNCTION IF EXISTS DANHSACHSINHVIEN
GO
CREATE FUNCTION DANHSACHSINHVIEN(@MAKHOA VARCHAR(255))
RETURNS TABLE
AS
RETURN(
	SELECT * FROM DMSV WHERE @MAKHOA=MAKHOA
)
GO
SELECT * FROM DANHSACHSINHVIEN('TH')

--12 Viết hàm thống kê số lượng sinh viên của mỗi khoa
DROP PROCEDURE IF EXISTS THONGKESV
GO
CREATE PROCEDURE THONGKESV
AS
BEGIN
	SELECT MAKHOA,COUNT(*) FROM DMSV GROUP BY MAKHOA
END
GO
EXEC THONGKESV

--13 Viết hàm xem kết quả học tập của sinh viên có mã được nhập từ bàn phím.
DROP FUNCTION IF EXISTS KETQUAHOCTAPSV
GO
CREATE FUNCTION KETQUAHOCTAPSV(@MASV VARCHAR(255))
RETURNS TABLE
AS
RETURN(
	SELECT * FROM KETQUA WHERE @MASV=MASV
)
GO
SELECT * FROM KETQUAHOCTAPSV('A01')

--14 Viết hàm đếm số lượng sinh viên của khoa có mã khoa được nhập vào từ bàn phím
DROP PROCEDURE IF EXISTS SOLUONGSVCUAKHOA
GO
CREATE PROCEDURE SOLUONGSVCUAKHOA @MAKHOA VARCHAR(255)
AS
BEGIN
	SELECT COUNT(*) FROM DMSV WHERE @MAKHOA=MAKHOA
END

GO
EXEC SOLUONGSVCUAKHOA 'CNTT'

